name: Integration Tests
on: push

jobs:
  # Label of the container job
  container-job:
    name: Tests
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: clubs
          POSTGRES_USER: loolabs
          POSTGRES_PASSWORD: loolabs
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        working-directory: server
        run: npm install

      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL client, populates
        # the client with data, and retrieves data
        # TODO: populate
        working-directory: server
        run: npm run test:integration
        # Environment variable used by the `client.js` script to create a new PostgreSQL client.
        env:
          SERVER_PORT: 3001
          DB_DATABASE_NAME: clubs
          DB_USERNAME: loolabs
          DB_PASSWORD: loolabs
          DB_PORT: 5432
          DATABASE_URL: postgresql://loolabs:loolabs@db/clubs
